name: password_folder_app
description: 一个密码记事本程序
#  以下行可防止包被意外发布到pub.dev 使用 `flutter pub publish`。 这是私人包裹的首选。
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# 以下定义了您的应用程序的版本和内部版本号。
# 版本号是由点分隔的三个数字，如 1.2.43
# 后跟一个可选的内部版本号，用 + 分隔。
# 在 flutter 中，版本号和构建器号都可能被覆盖
# 通过分别指定 --build-name 和 --build-number 来构建。
# 在 Android 中，build-name 用作 versionName，而 build-number 用作 versionCode。
# 在 https://developer.android.com/studio/publish/versioning 阅读更多关于 Android 版本控制的信息
# 在 iOS 中，build-name 用作 CFBundleShortVersionString，而 build-number 用作 CFBundleVersion。
# 阅读更多关于 iOS 版本控制的信息
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# 在 Windows 中，build-name 用作主要、次要和补丁部分
# 产品和文件版本，而内部版本号用作内部版本后缀。
version: 1.0.0+2
environment:
  sdk: ^3.5.3

# Dependencies 指定你的包需要的其他包才能工作。
# 自动升级你的包依赖到最新版本
# 考虑运行 `flutter pub upgrade --major-versions`。 或者，
# 可以通过将下面的版本号更改为手动更新依赖项
# pub.dev 上可用的最新版本。 查看哪些依赖项更新
# 版本可用，运行 `flutter pub outdated`。

isar_version: &isar_version 3.1.8


dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter

  # 下面将 Cupertino Icons 字体添加到您的应用程序中。
  # 与 CupertinoIcons 类一起用于 iOS 风格的图标。
  # https://pub.dev/packages/cupertino_icons
  #这是一个资产存储库，包含 Flutter 的Cupertino 小部件使用的默认图标资产集。
  cupertino_icons: ^1.0.8
  #https://pub.dev/packages/isar
  #isar 数据库
  isar:
    version: *isar_version
    hosted: https://pub.isar-community.dev/
  #https://pub.dev/packages/isar_flutter_libs
  isar_flutter_libs:
    version: *isar_version
    hosted: https://pub.isar-community.dev/
  #https://pub.dev/packages/path_provider
  #用于查找文件系统上常用位置的 Flutter 插件。
  #支持 Android、iOS、Linux、macOS 和 Windows。并非所有平台都支持所有方法。
  path_provider: ^2.1.5
  #https://pub.dev/packages/provider
  #对 InheritedWidget 组件的上层封装，使其更易用，更易复用。
  provider: ^6.1.2
  #https://pub.dev/packages/get
  #GetX 是一个超轻且强大的 Flutter 解决方案。它结合了高性能状态管理、智能依赖注入和路由管理，快速实用。
  get: ^4.6.6
  #https://pub.dev/packages/flex_color_picker
  #FlexColorPicker 是一个可自定义的 Flutter 颜色选择器。
  #可以ColorPicker显示六种不同类型的颜色选择器，其中三种用于标准 Flutter Material Design 2 颜色及其阴影。
  #可以自定义用于挑选物品的尺寸和样式。
  flex_color_picker: ^3.5.1
  #https://pub.dev/packages/encrypt
  #一组基于 PointyCastle 的高级 API，用于双向加密。
  encrypt: ^5.0.3
  # 日志插件
  logger: ^2.4.0
  # otp 二次验证码生成器
  otp: ^3.1.2
  #  base32 otp 需要库
#  base32: ^2.1.3
  # Google 协议解析
  #protobuf: ^3.1.0
  #一个 Dart 包，用于对 otpauth-migration URI 格式进行编码和解码，该格式用于从 Google Authenticator 应用程序导入和导出 2FA 密钥
  # 动态数字
  sliding_number: ^0.0.4
  otpauth_migration: ^0.0.7
dev_dependencies:
  flutter_test:
    sdk: flutter
    # 下面的“flutter_lints”包包含一组推荐的 lints
    # 鼓励良好的编码习惯。 软件包提供的 lint 集是
    # 在位于你的根目录的 `analysis_options.yaml` 文件中激活
    # 包裹。 有关停用特定 lint 的信息，请参阅该文件
    # 规则并激活其他规则。
  #  flutter_lints: ^2.0.0
  #https://pub.dev/packages/isar_generator
  #Isar 数据库的代码生成器请去那里获取文档。
  isar_generator:
    version: *isar_version
    hosted: https://pub.isar-community.dev/
  #https://pub.dev/packages/build_runner
  #该build_runner包提供了一种使用 Dart 代码生成文件的具体方法。
  #文件总是直接在磁盘上生成，重建是增量式的——受Bazel等工具的启发。
  build_runner: ^2.3.3
  # 有关此文件的通用 Dart 部分的信息，请参阅
  # 以下页面：https://dart.dev/tools/pub/pubspec
  #https://pub.dev/packages/flutter_launcher_icons
  #一种命令行工具，可简化更新 Flutter 应用程序启动器图标的任务。
  #完全灵活，允许您选择要更新启动器图标的平台，如果您愿意，还可以选择保留旧的启动器图标，以备日后恢复使用。
  flutter_launcher_icons: ^0.13.1
  #包重命名处理 6 个平台上 15 个文件的 30 个字段的更改，因此您可以专注于您的精彩项目。
  package_rename: ^1.2.0
# 以下部分特定于 Flutter 包。
flutter:

  # 以下行确保 Material Icons 字体是
  # 包含在您的应用程序中，以便您可以使用中的图标
  # 材质图标类。
  uses-material-design: true
  assets: [ image/ ]
# 处理app_icon
#flutter_icons:
#  #生成android的图标
#  android: true
#  #生成iOS的图标
#  ios: true
#  #图片路径
#  image_path: "image/app_icon.jpg"
#刷新图标缓存 flutter pub run flutter_launcher_icons
flutter_launcher_icons:
  android: "launcher_icon"
  ios: true
  image_path: "image/key.png"
  min_sdk_android: 21 # android min sdk min:16, default 21
  web:
    generate: true
    #    image_path: "image/web/image.png"
    background_color: "#hexcode"
    theme_color: "#hexcode"
  windows:
    generate: true
    #    image_path: "image/windows/image.png"
    icon_size: 48 # min:48, max:256, default: 48
  macos:
    generate: true
  #    image_path: "image/macos/image.png"

  # 要将资产添加到您的应用程序，请添加一个资产部分，如下所示：
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  # 图像资源可以引用一个或多个特定于分辨率的“变体”，请参见
  # https://flutter.dev/assets-and-images/#resolution-aware

  # 有关从包依赖项添加资产的详细信息，请参阅
  # https://flutter.dev/assets-and-images/#from-packages

  # 要将自定义字体添加到您的应用程序，请在此处添加一个字体部分，
  # 在这个“flutter”部分。 此列表中的每个条目都应该有一个
  # “family” 键带有字体系列名称，“fonts” 键带有
  # 列出字体的资产和其他描述符。 为了
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # 有关包依赖项中字体的详细信息，
  # 查看 https://flutter.dev/custom-fonts/#from-packages
package_rename_config: # 刷新方法 flutter pub run package_rename:set
  android:
    app_name: 密码册子 # (String) Android 应用程序的显示名称
    #    package_name: # (String) android应用的包名
    #    override_old_package: # (Optional) (String) 使用它来删除 MainActivity 的旧文件夹结构或使用具有新包名称的现有代码
    lang: java # (Optional) (String) android开发语言{kotlin(default) or java}

  ios:
    app_name: 密码册子 # (String) ios 应用程序的显示名称
    #    bundle_name: # (String) ios 应用程序的包名称
  #   package_name: # (String) ios 应用程序的产品包标识符

  linux:
    app_name: 密码册子 # (String) linux 应用程序的窗口标题
    #   package_name: # (String) linux 应用程序的应用程序 ID
  #   exe_name: # (String) linux 应用程序的可执行名称（二进制名称）

  macos:
    app_name: 密码册子 # (String) macos 应用程序的产品名称
    #   package_name: # (String) macos 应用程序的产品包标识符
  #   copyright_notice: # (String) macos app的产品版权

  web:
    app_name: 密码册子 # (String) Web 应用程序和 PWA 的标题和显示名称
    description: 密码册子 # (String) Web 应用程序和 PWA 的描述

  windows:
    app_name: 密码册子 # (String) Windows应用程序的窗口标题和软件名称
    organization: 个人 # (String) windows app的组织名称（公司名称）
    copyright_notice: # (String) windows app的合法版权
    exe_name: password_folder # (String) Windows 应用程序的可执行名称（二进制名称）
